<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>react on Eating...Hungry..</title>
    <link>http://localhost:1313/tags/react/</link>
    <description>Recent content in react on Eating...Hungry..</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 01 Feb 2020 10:47:01 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/react/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>createElement and render</title>
      <link>http://localhost:1313/daily/2020-02-01-/</link>
      <pubDate>Sat, 01 Feb 2020 10:47:01 +0800</pubDate>
      
      <guid>http://localhost:1313/daily/2020-02-01-/</guid>
      <description>一旦使用上次所写的rendering 整个dom树便在递归之前不能停止。如果元素树比较庞大，再有一些高级响应的操作，变会卡顿 引入小工作单元 组成</description>
    </item>
    
    <item>
      <title>createElement and render</title>
      <link>http://localhost:1313/daily/2020-01-31-createelement-render/</link>
      <pubDate>Fri, 31 Jan 2020 10:47:01 +0800</pubDate>
      
      <guid>http://localhost:1313/daily/2020-01-31-createelement-render/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 const element = &amp;lt;h1 title=&amp;#34;foo&amp;#34;&amp;gt;Hello&amp;lt;/h1&amp;gt; const container = document.getElementById(&amp;#34;root&amp;#34;) ReactDOM.render(element, container) // 替换 const element = &amp;lt;h1 title=&amp;#34;foo&amp;#34;&amp;gt;Hello&amp;lt;/h1&amp;gt; const element = React.createElement( &amp;#34;h1&amp;#34;, { title: &amp;#34;foo&amp;#34; }, &amp;#34;Hello&amp;#34; ) 由此定义转换成如下格式 1 2 3 4 5 6 7 const element = { type: &amp;#34;h1&amp;#34;, props: { title: &amp;#34;foo&amp;#34;, children: &amp;#34;Hello&amp;#34;,</description>
    </item>
    
  </channel>
</rss>
