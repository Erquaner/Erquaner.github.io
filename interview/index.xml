<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>面试 on Eating...Hungry..</title>
    <link>http://localhost:1313/interview/</link>
    <description>Recent content in 面试 on Eating...Hungry..</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 20 May 2021 16:25:20 +0800</lastBuildDate><atom:link href="http://localhost:1313/interview/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>http://localhost:1313/interview/e-10-xi-ma-la-ya/</link>
      <pubDate>Thu, 20 May 2021 16:25:20 +0800</pubDate>
      
      <guid>http://localhost:1313/interview/e-10-xi-ma-la-ya/</guid>
      <description>自我介绍 基本情况 服务端渲染 和客户端对比优缺点 怎么判断客户端渲染到服务端渲染的优化提速多少，看什么指标 qps多少？高并发怎么办？ 了解服务端渲染</description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/interview/e-11-elem/</link>
      <pubDate>Thu, 20 May 2021 16:25:20 +0800</pubDate>
      
      <guid>http://localhost:1313/interview/e-11-elem/</guid>
      <description>自我介绍 项目介绍 点击跳转请求为什么会丢失 gpu渲染机制 自动化埋点 直播介绍 jsdk的实现了解吗 事件机制 事件循环 react、vue和原生对比 re</description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/interview/e-12-hong-shu/</link>
      <pubDate>Thu, 20 May 2021 16:25:20 +0800</pubDate>
      
      <guid>http://localhost:1313/interview/e-12-hong-shu/</guid>
      <description>自我介绍 css三栏布局 单行文本、多行文本溢出通用方案 说了line-climp 那可能有浏览器兼容的限制 又说了js 那不用js 纯css解决呢 画一个</description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/interview/e-13-ha-luo/</link>
      <pubDate>Thu, 20 May 2021 16:25:20 +0800</pubDate>
      
      <guid>http://localhost:1313/interview/e-13-ha-luo/</guid>
      <description>自我介绍 position定位 relative定位怎么相对自己的 flex布局 a宽度800px，display flex; b flex: 1 2 200px，c flex: 3 4 40</description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/interview/e-14-sou-gou/</link>
      <pubDate>Thu, 20 May 2021 16:25:20 +0800</pubDate>
      
      <guid>http://localhost:1313/interview/e-14-sou-gou/</guid>
      <description>一面 自我介绍 http2.0 和http1.0对比 事件循环 误差尽量小的定时器，间隔1s context是否可以代替redux吗 怎么避免子组件不必要的渲染 写一个</description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/interview/e-15-wang-yi/</link>
      <pubDate>Thu, 20 May 2021 16:25:20 +0800</pubDate>
      
      <guid>http://localhost:1313/interview/e-15-wang-yi/</guid>
      <description>一面 自我介绍 水平垂直居中 align-items是水平还是竖直方向 自适应布局 css动画 left和translate平移有什么区别 基本数据类型 s</description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/interview/e-16-bai-du/</link>
      <pubDate>Thu, 20 May 2021 16:25:20 +0800</pubDate>
      
      <guid>http://localhost:1313/interview/e-16-bai-du/</guid>
      <description>一面 自我介绍 切换主题 h5兼容性问题 1px是因为什么 怎么解决 除了放大缩小 移动端怎么调试 如果出现了线上某一机型有问题，怎么调试 图片不知道宽高怎么</description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/interview/e-2-ban-yu/</link>
      <pubDate>Thu, 20 May 2021 16:25:20 +0800</pubDate>
      
      <guid>http://localhost:1313/interview/e-2-ban-yu/</guid>
      <description>一面 说一说ES6的新特性吧 map, object的key都是字符串吗 promise promise为了解决什么问题 promise原理了解过吗 浏览器缓存机制 etag last-modified 的作</description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/interview/e-3-lan-hu/</link>
      <pubDate>Thu, 20 May 2021 16:25:20 +0800</pubDate>
      
      <guid>http://localhost:1313/interview/e-3-lan-hu/</guid>
      <description>自我介绍 问了项目 做编程题 请编写function arrToObj(arr) {}, 将 1 2 3 4 5 6 7 8 const arr = [ { node: &amp;#34;a&amp;#34;, children: [&amp;#34;b&amp;#34;, &amp;#34;c&amp;#34;] }, { node: &amp;#34;d&amp;#34;, children: [&amp;#34;a&amp;#34;] }, { node: &amp;#34;b&amp;#34;, children: [&amp;#34;e&amp;#34;, &amp;#34;i&amp;#34;] }, { node: &amp;#34;c&amp;#34;, children: [&amp;#34;f&amp;#34;] }, { node: &amp;#34;f&amp;#34;, children: [&amp;#34;g&amp;#34;] },</description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/interview/e-6-soul/</link>
      <pubDate>Thu, 20 May 2021 16:25:20 +0800</pubDate>
      
      <guid>http://localhost:1313/interview/e-6-soul/</guid>
      <description>自我介绍 css flex布局 position js new的原理 箭头函数 promise promise.all失败了一个会怎么样 map了解过吗 和object的区别 reflect了解</description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/interview/e-7-hao-wei-lai/</link>
      <pubDate>Thu, 20 May 2021 16:25:20 +0800</pubDate>
      
      <guid>http://localhost:1313/interview/e-7-hao-wei-lai/</guid>
      <description>自我介绍 浏览器缓存 etag和last-modified谁的优先级高，etag有啥缺点 强缓存协商缓存的应用 跨域在平时开发怎么解决的 说了代理 nginx （</description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/interview/e-8-yuan-fu-dao/</link>
      <pubDate>Thu, 20 May 2021 16:25:20 +0800</pubDate>
      
      <guid>http://localhost:1313/interview/e-8-yuan-fu-dao/</guid>
      <description>自我介绍 介绍项目 ts 联合类型和交叉类型 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 interface A { foo: string; boo: number; } interface B { foo: string; car: number; } A &amp;amp; B =? A|B = ? interface B { foo: number; car:</description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/interview/e-9-bei-ke/</link>
      <pubDate>Thu, 20 May 2021 16:25:20 +0800</pubDate>
      
      <guid>http://localhost:1313/interview/e-9-bei-ke/</guid>
      <description>一面 自我介绍 做题，两个部分都三选二 Part 1 二维数组中的查找 在一个 n * m 的二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增</description>
    </item>
    
    <item>
      <title>html</title>
      <link>http://localhost:1313/interview/html/</link>
      <pubDate>Tue, 04 May 2021 16:25:20 +0800</pubDate>
      
      <guid>http://localhost:1313/interview/html/</guid>
      <description>html语义化 语义化是指根据内容的结构化（内容语义化），选择合适的标签（代码语义化），便于开发者阅读和写出更优雅的代码的同时，让浏览器的爬虫</description>
    </item>
    
    <item>
      <title>http</title>
      <link>http://localhost:1313/interview/http/</link>
      <pubDate>Tue, 04 May 2021 16:25:20 +0800</pubDate>
      
      <guid>http://localhost:1313/interview/http/</guid>
      <description>TCP/IP 协议 计算机之间的通信要遵循不同的协议，来实现互相之间的通信。 应用层：DNS 协议、HTTP、FTP、WebSocket 等。 传输层：TCP、U</description>
    </item>
    
    <item>
      <title>js基础</title>
      <link>http://localhost:1313/interview/js/</link>
      <pubDate>Tue, 04 May 2021 16:25:20 +0800</pubDate>
      
      <guid>http://localhost:1313/interview/js/</guid>
      <description>this 继承</description>
    </item>
    
    <item>
      <title>node</title>
      <link>http://localhost:1313/interview/node/</link>
      <pubDate>Tue, 04 May 2021 16:25:20 +0800</pubDate>
      
      <guid>http://localhost:1313/interview/node/</guid>
      <description>进程和线程 进程 是资源分配和调度的基本单位，是操作系统的基础，是线程的容器。比如打开浏览器是一个进程，再打开记事本就是开了两个进程。 进程守护：</description>
    </item>
    
    <item>
      <title>ts</title>
      <link>http://localhost:1313/interview/ts/</link>
      <pubDate>Tue, 04 May 2021 16:25:20 +0800</pubDate>
      
      <guid>http://localhost:1313/interview/ts/</guid>
      <description>typescript中interface 和type的区别 Answer: 1 2 3 4 5 interface SetPoint { (x: number, y: number): void; } type SetPoint = (x: number, y: number) =&amp;gt; void; 1 2 3 4 5 6 7 8 //number type MyNumber = number; //dom let div = document.createElement(&amp;#39;div&amp;#39;);</description>
    </item>
    
    <item>
      <title>优化</title>
      <link>http://localhost:1313/interview/better/</link>
      <pubDate>Tue, 04 May 2021 16:25:20 +0800</pubDate>
      
      <guid>http://localhost:1313/interview/better/</guid>
      <description></description>
    </item>
    
    <item>
      <title>其他技术</title>
      <link>http://localhost:1313/interview/other/</link>
      <pubDate>Tue, 04 May 2021 16:25:20 +0800</pubDate>
      
      <guid>http://localhost:1313/interview/other/</guid>
      <description>iScroll 是什么 iScroll 是一种高性能，占用空间小，无依赖的多平台 javascript 滚动器。体验堪比原生滚动。 为什么需要 针对性能和尺寸进行了优化，实现在现代和旧设备上最平滑</description>
    </item>
    
    <item>
      <title>算法</title>
      <link>http://localhost:1313/interview/algorithm/</link>
      <pubDate>Tue, 04 May 2021 16:25:20 +0800</pubDate>
      
      <guid>http://localhost:1313/interview/algorithm/</guid>
      <description>排序 快排 平均时间复杂度是O(nlogn)，最差时间复杂度是O(n²）。 核心思想是选定一个基准值x，将比x小的值放到左边，比x大的值放到右边。</description>
    </item>
    
    <item>
      <title>设计模式</title>
      <link>http://localhost:1313/interview/design-mode/</link>
      <pubDate>Tue, 04 May 2021 16:25:20 +0800</pubDate>
      
      <guid>http://localhost:1313/interview/design-mode/</guid>
      <description>发布订阅 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 class Listen { ctor() { this.handlers = {}; } on() { const [key, handle] = Array.from(arguments); if (key in this.handlers) { this.handlers[key] = [...this.handlers[key], handle]; } else { this.handlers[key] = [handle]; } } emit() { const [key, ...param] = Array.from(arguments); const handlerArr =</description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/interview/e-1-bai-ci-zhan/</link>
      <pubDate>Sat, 01 May 2021 16:25:20 +0800</pubDate>
      
      <guid>http://localhost:1313/interview/e-1-bai-ci-zhan/</guid>
      <description>Q1：typescript中interface 和type的区别 Answer: 1 2 3 4 5 interface SetPoint { (x: number, y: number): void; } type SetPoint = (x: number, y: number) =&amp;gt; void; 1 2 3 4 5 6 7 8 //number type MyNumber = number; //dom let</description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/interview/e-5-tu-zhan/</link>
      <pubDate>Sat, 01 May 2021 16:25:20 +0800</pubDate>
      
      <guid>http://localhost:1313/interview/e-5-tu-zhan/</guid>
      <description>自我介绍 tcp udp区别 443端口是那个协议？80是哪个协议？ 说说js事件循环吧 哪些是宏任务，哪些是微任务 提到了js单线程 为什么js是单线程 学的</description>
    </item>
    
    <item>
      <title>es6</title>
      <link>http://localhost:1313/interview/es6/</link>
      <pubDate>Sat, 01 May 2021 16:25:20 +0800</pubDate>
      
      <guid>http://localhost:1313/interview/es6/</guid>
      <description>箭头函数 this指向创建外部的上下文，this是静态的 不能修改指向 不能用做构造函数，与new使用会报错 没有argument,可以用rest 不</description>
    </item>
    
    <item>
      <title>experience</title>
      <link>http://localhost:1313/interview/experience/</link>
      <pubDate>Sat, 01 May 2021 16:25:20 +0800</pubDate>
      
      <guid>http://localhost:1313/interview/experience/</guid>
      <description>超有爱 ban-yu lan-hu tu-zhan soul hao-wei-lai fu-dao bei-ke 10 11 12 13 14 15 16</description>
    </item>
    
    <item>
      <title>webpack</title>
      <link>http://localhost:1313/interview/webpack/</link>
      <pubDate>Sat, 01 May 2021 16:25:20 +0800</pubDate>
      
      <guid>http://localhost:1313/interview/webpack/</guid>
      <description>entry 概念 入口起点(entry point) 指示 webpack 应该使用哪个模块来作为构建其内部依赖图(dependency graph)的开始。进入入口起点后，webpa</description>
    </item>
    
    <item>
      <title>手写代码</title>
      <link>http://localhost:1313/interview/write/</link>
      <pubDate>Sat, 01 May 2021 16:25:20 +0800</pubDate>
      
      <guid>http://localhost:1313/interview/write/</guid>
      <description>promise Promise就是为了解决回调地狱的问题而产生的。 特点 Promise 本质是一个状态机，每个 Promise 有三种状态：pending、fulfilled 以及reje</description>
    </item>
    
    <item>
      <title>css</title>
      <link>http://localhost:1313/interview/css/</link>
      <pubDate>Tue, 20 Apr 2021 16:25:20 +0800</pubDate>
      
      <guid>http://localhost:1313/interview/css/</guid>
      <description>1.BFC 概念: BFC 即 Block Formatting Contexts (块级格式化上下文)，就像一个封闭的箱子，不会影响外部的样式，并且具有一些普通容器所没有的特性。 触发方式: html根元素 f</description>
    </item>
    
    <item>
      <title>react</title>
      <link>http://localhost:1313/interview/react/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/interview/react/</guid>
      <description>react生命周期</description>
    </item>
    
  </channel>
</rss>
